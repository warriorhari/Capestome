{"version":3,"file":"angular-typing-animator.mjs","sources":["../../../projects/angular-typing-animator/src/lib/typing-animator.directive.ts","../../../projects/angular-typing-animator/src/lib/typing-animator.module.ts","../../../projects/angular-typing-animator/src/public-api.ts","../../../projects/angular-typing-animator/src/angular-typing-animator.ts"],"sourcesContent":["import { AfterViewInit, ElementRef } from '@angular/core';\nimport { Directive, EventEmitter, Input, Output } from '@angular/core';\nimport {\n  concat,\n  concatMap,\n  delay,\n  from,\n  ignoreElements,\n  interval,\n  map,\n  of,\n  repeat,\n  take,\n  tap\n} from 'rxjs';\nimport type { Observable } from 'rxjs';\n\n@Directive({\n  selector: '[typingAnimator]'\n})\nexport class TypingAnimatorDirective implements AfterViewInit {\n  defaults = {\n    typeSpeed: 50,\n    deleteSpeed: 30,\n    startDelay: 0,\n    showCursor: true\n  };\n\n  @Input() sentences!: string[];\n  @Input() typeSpeed: number = this.defaults.typeSpeed;\n  @Input() deleteSpeed: number = this.defaults.deleteSpeed;\n  @Input() startDelay: number = this.defaults.startDelay;\n  @Input() showCursor: boolean = this.defaults.showCursor;\n\n  @Output() onComplete: EventEmitter<{ word: string }> = new EventEmitter<{\n    word: string;\n  }>();\n  @Output() onDeleted: EventEmitter<{ word: string }> = new EventEmitter<{\n    word: string;\n  }>();\n\n  private cursor!: HTMLSpanElement;\n\n  constructor(private elRef: ElementRef) {}\n\n  ngAfterViewInit() {\n    setTimeout(() => {\n      if(this.showCursor) {\n        this.insertCursor();\n        this.appendStyling();\n      }\n\n      from(this.sentences)\n        .pipe(concatMap(this.typeEffect), repeat())\n        .subscribe((x) => (this.elRef.nativeElement.textContent = x));\n    }, this.startDelay);\n  }\n\n  type = (word: string, speed: number, backwards = false): Observable<string> =>\n    interval(speed).pipe(\n      map((x) =>\n        backwards\n          ? word.substring(0, word.length - x - 1)\n          : word.substring(0, x + 1)\n      ),\n      take(word.length)\n    );\n\n  typeEffect = (word: string): Observable<string> =>\n    concat(\n      this.type(word, this.typeSpeed),\n      of('').pipe(\n        delay(1200),\n        ignoreElements(),\n        tap(() => this.onComplete.emit({ word: word }))\n      ),\n      this.type(word, this.deleteSpeed, true),\n      of('').pipe(\n        delay(300),\n        ignoreElements(),\n        tap(() => this.onDeleted.emit({ word: word }))\n      )\n    );\n\n  private insertCursor() {\n    if (this.cursor) {\n      return;\n    }\n\n    this.cursor = document.createElement('span');\n    this.cursor.className = 'typed-cursor';\n    this.cursor.innerHTML = '|';\n\n    this.elRef.nativeElement.parentNode &&\n    this.elRef.nativeElement.parentNode.insertBefore(\n      this.cursor,\n      this.elRef.nativeElement.nextSibling\n    );\n  }\n\n  private appendStyling() {\n    if (this.showCursor) {\n      if (document.head.querySelector('#typing')) {\n        return;\n      }\n\n      const css: HTMLStyleElement = document.createElement('style');\n      css.id = 'typing';\n      css.innerHTML = `\n        .typed-cursor {\n            opacity: 1;\n            animation: typedjsBlink 0.7s infinite;\n            -webkit-animation: typedjsBlink 0.7s infinite;\n            animation: typedjsBlink 0.7s infinite;\n        }\n        @keyframes typedjsBlink {\n            50% { opacity: 0.0; }\n        }\n        @-webkit-keyframes typedjsBlink {\n            0% { opacity: 1; }\n            50% { opacity: 0.0; }\n            100% { opacity: 1; }\n        }\n      `;\n\n      document.head.appendChild(css);\n    }\n  }\n}\n","import { TypingAnimatorDirective } from './typing-animator.directive';\nimport { NgModule } from '@angular/core';\n\n@NgModule({\n  declarations: [\n    TypingAnimatorDirective\n  ],\n  exports: [\n    TypingAnimatorDirective\n  ]\n})\nexport class TypingAnimatorModule { }\n","/*\n * Public API Surface of angular-typing-animator\n */\nexport * from './lib/typing-animator.module';\nexport * from './lib/typing-animator.directive';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}